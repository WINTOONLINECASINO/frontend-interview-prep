question,answer,category,difficulty,tags
"What is Angular Framework?","Angular is a TypeScript-based open-source front-end platform that makes it easy to build web, mobile and desktop applications. The major features of this framework include declarative templates, dependency injection, end to end tooling which ease application development.","Angular Basics","easy","angular"
"What is the difference between AngularJS and Angular?","AngularJS (version 1.x) is a JavaScript framework, whereas Angular (version 2+) is a complete rewrite of AngularJS using TypeScript, providing better performance, mobile support, modularity, and a more modern architecture.","General","intermediate","general"
"What is TypeScript?","TypeScript is a strongly typed superset of JavaScript created by Microsoft that adds optional types, classes, async/await and many other features, and compiles to plain JavaScript. Angular is written entirely in TypeScript as a primary language. You can install TypeScript globally as","General","intermediate","general"
"Write a pictorial diagram of Angular architecture?","The main building blocks of an Angular application are shown in the diagram below:- ScreenShot","Angular Basics","easy","angular;di"
"What are the key components of Angular?","Angular has the key components below,","General","intermediate","general"
"What are directives?","Directives add behaviour to an existing DOM element or an existing component instance.","General","intermediate","general"
"What are components?","Components are the most basic UI building block of an Angular app, which form a tree of Angular components. These components are a subset of directives. Unlike directives, components always have a template, and only one component can be instantiated per element in a template. Let's see a simple example of Angular component","General","intermediate","general"
"What are the differences between Component and Directive?","In a short note, A component(@component) is a directive-with-a-template.","General","intermediate","general"
"What is a template?","A template is a HTML view where you can display data by binding controls to properties of an Angular component. You can store your component's template in one of two places. You can define it inline using the template property, or you can define the template in a separate HTML file and link to it in the component metadata using the @Component decorator's templateUrl property.","General","intermediate","general"
"What is a module?","Modules are logical boundaries in your application and the application is divided into separate modules to separate the functionality of your application. Lets take an example of app.module.ts root module declared with @NgModule decorator as below,","General","intermediate","general"
"What are lifecycle hooks available?","Angular application goes through an entire set of processes or has a lifecycle right from its initiation to the end of the application. The representation of lifecycle in pictorial representation as follows,","General","intermediate","general"
"What is a data binding?","Data binding is a core concept in Angular and allows to define communication between a component and the DOM, making it very easy to define interactive applications without worrying about pushing and pulling data. There are four forms of data binding(divided as 3 categories) which differ in the way the data is flowing.","General","intermediate","general"
"What is metadata?","Metadata is used to decorate a class so that it can configure the expected behavior of the class. The metadata is represented by decorators","General","intermediate","general"
"What is angular CLI?","Angular CLI(Command Line Interface) is a command line interface to scaffold and build angular apps using nodejs style (commonJs) modules. You need to install using below npm command,","General","intermediate","general"
"What is the difference between constructor and ngOnInit?","The Constructor is a default method of the class that is executed when the class is instantiated and ensures proper initialisation of fields in the class and its subclasses. Angular, or better Dependency Injector (DI), analyses the constructor parameters and when it creates a new instance by calling new MyClass() it tries to find providers that match the types of the constructor parameters, resolves them and passes them to the constructor.","General","intermediate","general"
"What is a service?","A service is used when a common functionality needs to be provided to various modules. Services allow for greater separation of concerns for your application and better modularity by allowing you to extract common functionality out of components.","General","intermediate","general"
"What is dependency injection in Angular?","Dependency injection (DI), is an important application design pattern in which a class asks for dependencies from external sources rather than creating them itself. Angular comes with its own dependency injection framework for resolving dependencies( services or objects that a class needs to perform its function).So you can have your services depend on other services throughout your application.","Dependency Injection","easy","angular"
"How is Dependency Hierarchy formed?","Injectors in Angular have rules that can be leveraged to achieve the desired visibility of injectables in your applications. By understanding these rules, you can determine in which NgModule, Component, or Directive you should declare a provider.","General","intermediate","general"
"What is the purpose of async pipe?","The AsyncPipe subscribes to an observable or promise and returns the latest value it has emitted. When a new value is emitted, the pipe marks the component to be checked for changes.","General","intermediate","general"
"What is the option to choose between inline and external template file?","You can store your component's template in one of two places. You can define it inline using the template property, or you can define the template in a separate HTML file and link to it in the component metadata using the @Component decorator's templateUrl property.","General","intermediate","general"
"What is the purpose of *ngFor directive?","We use Angular *ngFor directive in the template to display each item in the list. For example, here we can iterate over a list of users:","General","intermediate","general"
"What is the purpose of *ngIf directive?","Sometimes an app needs to display a view or a portion of a view only under specific circumstances. The Angular *ngIf directive inserts or removes an element based on a truthy/falsy condition. Let's take an example to display a message if the user age is more than 18:","General","intermediate","general"
"What happens if you use script tag inside template?","Angular recognizes the value as unsafe and automatically sanitizes it, which removes the script tag but keeps safe content such as the text content of the script tag. This way it eliminates the risk of script injection attacks. If you still use it then it will be ignored and a warning appears in the browser console.","General","intermediate","general"
"What is interpolation?","Interpolation is a special syntax that Angular converts into property binding. Itâ€™s a convenient alternative to property binding. It is represented by double curly braces({{}}). The text between the braces is often the name of a component property. Angular replaces that name with the string value of the corresponding component property.","General","intermediate","general"
"What are template expressions?","A template expression produces a value similar to any Javascript expression. Angular executes the expression and assigns it to a property of a binding target; the target might be an HTML element, a component, or a directive. In the property binding, a template expression appears in quotes to the right of the = symbol as in [property]=expression. In interpolation syntax, the template expression is surrounded by double curly braces. For example, in the below interpolation, the template expression is {{username}},","General","intermediate","general"
"What are template statements?","A template statement responds to an event raised by a binding target such as an element, component, or directive. The template statements appear in quotes to the right of the = symbol like (event)=statement.","General","intermediate","general"
"How do you categorize data binding types?","Binding types can be grouped into three categories distinguished by the direction of data flow. They are listed as below,","General","intermediate","general"
"What are pipes?","Pipes are simple functions that use template expressions to accept data as input and transform it into a desired output. For example, let us take a pipe to transform a component's birthday property into a human-friendly date using date pipe.","General","intermediate","general"
"What is a parameterized pipe?","A pipe can accept any number of optional parameters to fine-tune its output. The parameterized pipe can be created by declaring the pipe name with a colon ( : ) and then the parameter value. If the pipe accepts multiple parameters, separate the values with colons. Let's take a birthday example with a particular format(dd/MM/yyyy):","General","intermediate","general"
"How do you chain pipes?","You can chain pipes together in potentially useful combinations as per the needs. Let's take a birthday property which uses date pipe(along with parameter) and uppercase pipes as below","General","intermediate","general"
"What is a custom pipe?","Apart from built-in pipes, you can write your own custom pipe with the below key characteristics:","General","intermediate","general"
"Give an example of custom pipe?","You can create custom reusable pipes for the transformation of existing value. For example, let us create a custom pipe for finding file size based on an extension,","General","intermediate","general"
"What is the difference between pure and impure pipe?","A pure pipe is only called when Angular detects a change in the value or the parameters passed to a pipe. For example, any changes to a primitive input value (String, Number, Boolean, Symbol) or a changed object reference (Date, Array, Function, Object). An impure pipe is called for every change detection cycle no matter whether the value or parameters changes. i.e, An impure pipe is called often, as often as every keystroke or mouse-move.","Pipes","easy","di"
"What is a bootstrapping module?","Every application has at least one Angular module, the root module that you bootstrap to launch the application is called as bootstrapping module. It is commonly known as AppModule. The default structure of AppModule generated by AngularCLI would be as follows:","General","intermediate","general"
"What are observables?","Observables are declarative which provide support for passing messages between publishers and subscribers in your application. They are mainly used for event handling, asynchronous programming, and handling multiple values. In this case, you define a function for publishing values, but it is not executed until a consumer subscribes to it. The subscribed consumer then receives notifications until the function completes, or until they unsubscribe.","RxJS","intermediate","angular"
"What is HttpClient and its benefits?","Most of the Front-end applications communicate with backend services over HTTP protocol using either XMLHttpRequest interface or the fetch() API. Angular provides a simplified client HTTP API known as HttpClient which is based on top of XMLHttpRequest interface. This client is available from @angular/common/http package. You can import in your root module as below:","General","intermediate","general"
"Explain on how to use HttpClient with an example?","Below are the steps need to be followed for the usage of HttpClient.","General","intermediate","general"
"How can you read full response?","The response body doesn't or may not return full response data because sometimes servers also return special headers or status code, which are important for the application workflow. In order to get the full response, you should use observe option from HttpClient:","General","intermediate","general"
"How do you perform Error handling?","If the request fails on the server or fails to reach the server due to network issues, then HttpClient will return an error object instead of a successful response. In this case, you need to handle in the component by passing error object as a second callback to subscribe() method.","General","intermediate","general"
"What is RxJS?","RxJS is a library for composing asynchronous and callback-based code in a functional, reactive style using Observables. Many APIs such as HttpClient produce and consume RxJS Observables and also uses operators for processing observables.","General","intermediate","general"
"What is subscribing?","An Observable instance begins publishing values only when someone subscribes to it. So you need to subscribe by calling the subscribe() method of the instance, passing an observer object to receive the notifications.","General","intermediate","general"
"What is an observable?","An Observable is a unique Object similar to a Promise that can help manage async code. Observables are not part of the JavaScript language so we need to rely on a popular Observable library called RxJS. The observables are created using new keyword.","General","intermediate","general"
"What is an observer?","Observer is an interface for a consumer of push-based notifications delivered by an Observable. It has below structure,","General","intermediate","general"
"What is the difference between promise and observable?","Below are the list of differences between promise and observable:","General","intermediate","general"
"What is multicasting?","Multi-casting is the practice of broadcasting to a list of multiple subscribers in a single execution.","General","intermediate","general"
"How do you perform error handling in observables?","You can handle errors by specifying an error callback on the observer instead of relying on try/catch, which are ineffective in asynchronous environment.","General","intermediate","general"
"What is the shorthand notation for subscribe method?","The subscribe() method can accept callback function definitions in line, for next, error, and complete handlers. It is known as shorthand notation or Subscribe method with positional arguments.","General","intermediate","general"
"What are the utility functions provided by RxJS?","The RxJS library also provides below utility functions for creating and working with observables.","General","intermediate","general"
"What are observable creation functions?","RxJS provides creation functions for the process of creating observables from promises, events, timers and Ajax requests. Let us explain each of them with an example:","General","intermediate","general"
"What will happen if you do not supply handler for the observer?","Usually, an observer object can define any combination of next, error, and complete notification type handlers. If you don't supply a handler for a notification type, the observer just ignores notifications of that type.","RxJS","intermediate","angular"