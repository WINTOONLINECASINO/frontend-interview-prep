#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🔍 Pre-Push Validation"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""

# TypeScript Type Check
echo "📘 TypeScript: Checking for type errors..."
pnpm type-check
if [ $? -ne 0 ]; then
  echo "❌ TypeScript errors found! Fix them before pushing."
  exit 1
fi
echo "✅ No TypeScript errors"
echo ""

# ESLint Check
echo "🔍 ESLint: Checking code quality..."
pnpm lint
if [ $? -ne 0 ]; then
  echo "❌ ESLint errors found! Run 'pnpm lint:fix' to auto-fix."
  exit 1
fi
echo "✅ No linting errors"
echo ""

# Check for 'any' types (only type annotations, not strings)
echo "🚫 Checking for 'any' type usage..."
ANY_COUNT=$(grep -rE "(: any[^a-zA-Z]|: any\$|<any>|Array<any)" src/ --include="*.ts" --include="*.tsx" | grep -v "as any" | grep -v "// @ts" | grep -v "test" | grep -v ".test." | grep -v "__tests__" | wc -l | xargs)
if [ "$ANY_COUNT" -gt 0 ]; then
  echo "⚠️  Warning: Found $ANY_COUNT usage(s) of 'any' type annotation:"
  grep -rnE "(: any[^a-zA-Z]|: any\$|<any>|Array<any)" src/ --include="*.ts" --include="*.tsx" | grep -v "as any" | grep -v "// @ts" | grep -v "test" | grep -v ".test." | grep -v "__tests__" | head -5
  echo ""
  read -p "Continue anyway? (y/n) " -n 1 -r
  echo ""
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
  fi
else
  echo "✅ No 'any' types found"
fi
echo ""

# Run Tests
echo "🧪 Running test suite..."
pnpm test
if [ $? -ne 0 ]; then
  echo "❌ Tests failed! Fix failing tests before pushing."
  exit 1
fi
echo "✅ All tests passed"
echo ""

# Check for unused files (basic check)
echo "📁 Checking for unused files..."
UNUSED=$(find src -name "*.tsx" -o -name "*.ts" | while read file; do
  filename=$(basename "$file" .tsx)
  filename=$(basename "$filename" .ts)
  if ! grep -r "$filename" src/ --include="*.ts" --include="*.tsx" --exclude-dir=__tests__ > /dev/null 2>&1; then
    echo "$file"
  fi
done)

if [ ! -z "$UNUSED" ]; then
  echo "⚠️  Potentially unused files found:"
  echo "$UNUSED"
  echo ""
  echo "Note: This is a basic check. Verify manually."
  echo ""
else
  echo "✅ No obvious unused files"
fi
echo ""

# Check imports organization (React should be imported when JSX is used)
echo "📦 Checking React imports..."
FILES_WITHOUT_REACT=$(grep -l "\.tsx$" -r src/ | xargs grep -L "^import.*React" || true)
if [ ! -z "$FILES_WITHOUT_REACT" ]; then
  echo "ℹ️  Note: React 19 doesn't require explicit import for JSX"
  echo "✅ Import practices OK"
else
  echo "✅ All imports follow best practices"
fi
echo ""

# Build Check
echo "🏗️  Build: Testing production build..."
pnpm build
if [ $? -ne 0 ]; then
  echo "❌ Build failed! Fix build errors before pushing."
  exit 1
fi
echo "✅ Build successful"
echo ""

echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✅ All pre-push checks passed!"
echo "🚀 Pushing to remote..."
echo ""

